/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.41
 * Generated at: 2021-03-08 14:53:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.sub;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.PrintWriter;
import DAO.Dao;
import com.mysql.fabric.Response;
import java.awt.dnd.DropTargetListener;
import java.util.ArrayList;
import java.sql.SQLException;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.io.PrintWriter;
import DTO.Board;

public final class menu_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/curon/OneDrive/문서/git/WJ/eclipse/세팅/.metadata/.plugins/org.eclipse.wst.server.core/tmp2/wtpwebapps/VapeWeb/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1615128643405L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.PrintWriter");
    _jspx_imports_classes.add("java.sql.SQLException");
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("DTO.Board");
    _jspx_imports_classes.add("DAO.Dao");
    _jspx_imports_classes.add("com.mysql.fabric.Response");
    _jspx_imports_classes.add("java.awt.dnd.DropTargetListener");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
    _jspx_imports_classes.add("java.sql.DriverManager");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta charset=\"utf-8\">\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"css/bootstrap.min.css\">\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"css/custom.css\">\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/gh/stove99/jquery-modal-sample@v1.4/css/animate.min.css\" />\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/gh/stove99/jquery-modal-sample@v1.4/css/jquery.modal.css\" />\r\n");
      out.write("\t<title>JASET VAPE</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("div {text-align: center;}\r\n");
      out.write(".form {\r\n");
      out.write("    float: right;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\t");

		String id = null;
		if	(session.getAttribute("id") != null) {
		id = (String) session.getAttribute("id");
		}
	
      out.write("\r\n");
      out.write("    ");

    	if(id == null) {
   	
      out.write("\r\n");
      out.write("\t<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n");
      out.write("   \t\t<div class=\"d-flex flex-grow-1\">\r\n");
      out.write("        \t<div class=\"w-100 text-right\">\r\n");
      out.write("            \t<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" >\r\n");
      out.write("                \t<span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("            \t</button>\r\n");
      out.write("        \t</div>\r\n");
      out.write("    \t</div>\r\n");
      out.write("\r\n");
      out.write("\t    <div class=\"collapse navbar-collapse flex-grow-1 text-right\">\r\n");
      out.write("    \t    <ul class=\"navbar-nav ml-auto flex-nowrap\">\r\n");
      out.write("        \t    <li class=\"nav-item active\">\r\n");
      out.write("            \t    <a class=\"nav-link\" href=\"login.do\">로그인</a>\r\n");
      out.write("            \t</li>\r\n");
      out.write("            \t<li class=\"nav-item\">\r\n");
      out.write("                \t<a class=\"nav-link\" href=\"join.do\">회원가입</a>\r\n");
      out.write("\t            </li>\r\n");
      out.write("    \t        <li class=\"nav-item\">\r\n");
      out.write("        \t        <a class=\"nav-link\" href=\"myshopping.do\" onclick=\"checkForm(); return false;\">나의 쇼핑</a>\r\n");
      out.write("\t            </li>\r\n");
      out.write("    \t    </ul>\r\n");
      out.write("    \t</div>\r\n");
      out.write("\t</nav>\r\n");
      out.write("\t");

    	} else {
    
      out.write("\r\n");
      out.write("\t<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n");
      out.write("   \t<div class=\"d-flex flex-grow-1\">\r\n");
      out.write("        \t<div class=\"w-100 text-right\">\r\n");
      out.write("            \t<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" >\r\n");
      out.write("                \t<span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("            \t</button>\r\n");
      out.write("        \t</div>\r\n");
      out.write("    \t</div>\r\n");
      out.write("\r\n");
      out.write("\t    <div class=\"collapse navbar-collapse flex-grow-1 text-right\">\r\n");
      out.write("    \t    <ul class=\"navbar-nav ml-auto flex-nowrap\">\r\n");
      out.write("        \t    <li class=\"nav-item active\">\r\n");
      out.write("            \t  <a class=\"nav-link\" href=\"logoutAction.do\">");
      out.print("["+id+"]님 "+"환영합니다." );
      out.write(" 로그아웃</a>\r\n");
      out.write("            \t</li>\r\n");
      out.write("            \t<li class=\"nav-item\">\r\n");
      out.write("                \t<a class=\"nav-link\" href=\"userlistAction.do\">회원수정</a>\r\n");
      out.write("            \t</li>\r\n");
      out.write("            \t<li class=\"nav-item\">\r\n");
      out.write("                \t<a class=\"nav-link\" href=\"myshopping.do\">나의 쇼핑</a>\r\n");
      out.write("            \t</li>\r\n");
      out.write("            \t");

            		String admin = (String) session.getAttribute("admin");
            		if(admin == null)
            			admin = "0";
            		if(admin.equals("1")) {
            	
      out.write("\r\n");
      out.write("            \t<li class=\"nav-item\">\r\n");
      out.write("                \t<a data-toggle=\"modal\" href=\"#myModal\" class=\"nav-link\">관리자 권한 부여</a>\r\n");
      out.write("            \t</li>\r\n");
      out.write("               \t<li class=\"nav-item\">\r\n");
      out.write("                \t<a class=\"nav-link\" href=\"UList\">관리</a>\r\n");
      out.write("            \t</li>\r\n");
      out.write("            \t");
}
      out.write("\r\n");
      out.write("        \t</ul>\r\n");
      out.write("    \t</div>\r\n");
      out.write("\t</nav>\r\n");
      out.write("    ");

    	}
	
      out.write("\r\n");
      out.write("  <form action=\"setauthorityAction.do\" method =\"post\">\r\n");
      out.write("\t  <div class=\"modal fade\" id=\"myModal\" role=\"dialog\"> <!-- 사용자 지정 부분① : id명 -->\r\n");
      out.write("\t    <div class=\"modal-dialog\">\r\n");
      out.write("\t      <!-- Modal content-->\r\n");
      out.write("\t      <div class=\"modal-content\">\r\n");
      out.write("\t        <div class=\"modal-header\">\r\n");
      out.write("\t          <h4 class=\"modal-title\">관리자 등록</h4> <!-- 사용자 지정 부분② : 타이틀 -->\r\n");
      out.write("\t        </div>\r\n");
      out.write("\t        <div class=\"modal-body\">\r\n");
      out.write("\t          \t<label for=\"userid\">아이디\r\n");
      out.write("\t          \t<input type=\"text\" name=\"userid\" value=\"\">\r\n");
      out.write("\t          \t</label> <!-- 사용자 지정 부분③ : 텍스트 메시지 -->\r\n");
      out.write("\t        </div>\r\n");
      out.write("\t        <div class=\"modal-footer\">\r\n");
      out.write("\t          <button type=\"submit\" class=\"btn btn-default\">등록</button>\r\n");
      out.write("\t          <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">닫기</button>\r\n");
      out.write("\t        </div>\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t  </div>\r\n");
      out.write("  </form>\r\n");
      out.write("<br>\r\n");
      out.write("<div ><a href=\"main.do\"><img src=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\"/></a></div>\r\n");
      out.write("\r\n");
      out.write("  <div class=\"item1\">\r\n");
      out.write("  <form onsubmit=\"return checkForm2();\" class=\"form-inline\" action=\"productdetailpageAction.do\">\r\n");
      out.write("  <input class=\"form-control mr-sm-2 \" name=\"Search\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\r\n");
      out.write("  <input type=\"hidden\" name=\"Producttype\" value=\"Common\">\r\n");
      out.write("  <input type=\"hidden\" name=\"Page\" value=\"1\">\r\n");
      out.write("  <input type=\"hidden\" name=\"Sortmethod\" value=\"1\">\r\n");
      out.write("  <input type=\"hidden\" name=\"NowPageNum\" value=\"1\">\r\n");
      out.write("  <button class=\"btn bg-dark text-white btn-outline-white my-2 my-sm-0 {background-color: #223a6b !important;} float-right\" type=\"submit\">Search</button>\r\n");
      out.write("  </form>\r\n");
      out.write(" </div>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("   function checkForm2() {\r\n");
      out.write("      if (");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${id == null}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(") {\r\n");
      out.write("    \t alert(\"로그인 해주세요.\");\r\n");
      out.write("    \t location.href = \"login.do\";\r\n");
      out.write("    \t return false;\r\n");
      out.write("      } else {\r\n");
      out.write("\t\treturn true;\r\n");
      out.write("      }\r\n");
      out.write("   }\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script src=\"//cdn.jsdelivr.net/gh/stove99/jquery-modal-sample@v1.4/js/jquery.modal.js\"></script>\r\n");
      out.write("<script src=\"//cdn.jsdelivr.net/gh/stove99/jquery-modal-sample@v1.4/js/modal.js\"></script>\r\n");
      out.write("<script src=\"js/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("<script src=\"js/bootstrap.min.js\"></script>\r\n");
      out.write("<script src=\"css/bootstrap.min.css\"></script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /WEB-INF/sub/menu.jsp(130,34) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue("/img/logo.png");
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }
}
